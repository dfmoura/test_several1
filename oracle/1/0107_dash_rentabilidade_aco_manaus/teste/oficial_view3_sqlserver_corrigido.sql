-- =============================================
-- Script SQL Server para criação/atualização da View
-- Data: 2024-01-07
-- Descrição: View de rentabilidade ACO Manaus
-- =============================================

-- Verificar se a view existe e criar/atualizar
IF OBJECT_ID('VW_RENTABILIDADE_ACO_MANAUS', 'V') IS NOT NULL
BEGIN
    PRINT 'View VW_RENTABILIDADE_ACO_MANAUS já existe. Atualizando...'
    DROP VIEW VW_RENTABILIDADE_ACO_MANAUS
END
ELSE
BEGIN
    PRINT 'Criando nova view VW_RENTABILIDADE_ACO_MANAUS...'
END

GO

CREATE VIEW VW_RENTABILIDADE_ACO_MANAUS AS
WITH GRU AS (
    SELECT 
        G.CODGRUPOPROD,
        CASE 
            WHEN G.GRAU = 1 THEN G.CODGRUPOPROD
            WHEN G.GRAU IN (2, 3) THEN G.CODGRUPAI
            ELSE NULL
        END AS CODGRUPAI,
        COALESCE(G1.DESCRGRUPOPROD, G.DESCRGRUPOPROD) AS DESCRGRUPO_NIVEL1
    FROM 
        TGFGRU G
        LEFT JOIN TGFGRU G1 ON
            (
                (G.GRAU = 1 AND G1.CODGRUPOPROD = G.CODGRUPOPROD)
                OR
                (G.GRAU = 2 AND G1.CODGRUPOPROD = G.CODGRUPAI AND G1.GRAU = 1)
                OR
                (
                    G.GRAU = 3 
                    AND G1.CODGRUPOPROD = (
                        SELECT G2.CODGRUPAI
                        FROM TGFGRU G2
                        WHERE G2.CODGRUPOPROD = G.CODGRUPAI
                    )
                    AND G1.GRAU = 1
                )
            )
    WHERE 
        G.CODGRUPOPROD > 0
),
GRU1 AS (
    SELECT 
        PRO.CODPROD,
        PRO.DESCRPROD,
        GRU.CODGRUPAI,
        GRU.DESCRGRUPO_NIVEL1,
        VOA.CODVOL,
        VOA.DIVIDEMULTIPLICA,
        VOA.QUANTIDADE
    FROM TGFPRO PRO
    INNER JOIN TGFVOA VOA ON PRO.CODPROD = VOA.CODPROD
    INNER JOIN GRU ON PRO.CODGRUPOPROD = GRU.CODGRUPOPROD
    WHERE VOA.CODVOL = 'KG' AND PRO.CODGRUPOPROD > 0
)

SELECT
    CAB.NUNOTA, 
    ITE.SEQUENCIA, 
    CAB.CODEMP, 
    EMP.NOMEFANTASIA AS EMPRESA,
    CAB.TIPMOV, 
    TOP1.AD_COMPOE_FAT, 
    CAB.DTNEG, 
    TOP1.ATIVO AS ATIVO_TOP,
    CAB.CODNAT,
    NAT.DESCRNAT,
    NAT.ATIVA AS ATIVA_NAT,
    NAT.AD_TIPOCUSTO AS TIPOCUSTO, 
    CAB.CODCENCUS,
    CUS.DESCRCENCUS,
    CUS.ATIVO AS ATIVO_CR, 
    CAB.CODVEND,
    CASE WHEN ISNULL(CAB.CODVEND, 0) = 0 THEN 'SEM INFORMACAO' ELSE VEN.APELIDO END AS VENDEDOR,
    ISNULL(VEN.CODGER, 0) AS CODGER,
    CASE WHEN ISNULL(VEN.CODGER, 0) = 0 THEN 'SEM INFORMACAO' ELSE VENG.APELIDO END AS GERENTE,
    CAB.CODPARC, 
    PAR.NOMEPARC, 
    PAR.CODTIPPARC,
    UPPER(CASE WHEN TPP.DESCRTIPPARC = '<SEM TIPO PARCEIRO>' THEN 'SEM INFORMACAO' ELSE TPP.DESCRTIPPARC END) AS DESCRTIPPARC,
    PAR.CODCID, 
    UPPER(CID.NOMECID) AS NOMECID, 
    PAR.CODBAI, 
    BAI.NOMEBAI,
    CAB.CODTIPOPER, 
    TOP1.DESCROPER,
    TOP1.AD_COMPOE_FAT,  
    ITE.CODPROD, 
    PRO.DESCRPROD, 
    ITE.CODVOL, 
    -- Campos adicionados do TESTE.sql
    ISNULL(GRU1.CODGRUPAI, 0) AS CODGRUPAI,
    ISNULL(GRU1.DESCRGRUPO_NIVEL1, 'SEM GRUPO') AS DESCRGRUPO_NIVEL1,
    ISNULL(GRU1.DIVIDEMULTIPLICA, 0) AS DIVIDEMULTIPLICA,
    ISNULL(GRU1.QUANTIDADE, 0) AS QUANTIDADE_VOLUME,

    (CASE WHEN ITE.CODVOL <> 'KG' THEN 
        CASE 
            WHEN GRU1.DIVIDEMULTIPLICA = 'D' THEN ITE.QTDNEG / GRU1.QUANTIDADE
            WHEN GRU1.DIVIDEMULTIPLICA = 'M' THEN ITE.QTDNEG * GRU1.QUANTIDADE 
        END 
    ELSE ITE.QTDNEG 
    END) AS KG,

    (CASE WHEN ITE.CODVOL <> 'KG' THEN 
        CASE 
            WHEN GRU1.DIVIDEMULTIPLICA = 'D' THEN ITE.QTDNEG / GRU1.QUANTIDADE
            WHEN GRU1.DIVIDEMULTIPLICA = 'M' THEN ITE.QTDNEG * GRU1.QUANTIDADE 
        END 
    ELSE ITE.QTDNEG 
    END) / 1000 AS TON,

    ITE.VLRUNIT,
    ITE.QTDNEG * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END AS QTDNEG,
    ITE.VLRDESC * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END AS VLRDESC,
    CASE WHEN CAB.TIPMOV = 'D' THEN (ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) * -1 ELSE 0 END AS VLRDEV,
    CASE WHEN CAB.TIPMOV = 'D' THEN (ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) * -1 ELSE (ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) END AS TOTALLIQ,

    ITE.VLRIPI * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END AS VLRIPI,
    ITE.VLRSUBST * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END AS VLRSUBST,
    ITE.VLRICMS * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END AS VLRICMS,

    ISNULL(
        (SELECT SUM(VALOR) 
         FROM TGFDIN 
         WHERE NUNOTA = CAB.NUNOTA 
           AND SEQUENCIA = ITE.SEQUENCIA 
           AND CODIMP = 6), 0
    ) * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END AS VLRPIS,

    ISNULL(
        (SELECT SUM(VALOR) 
         FROM TGFDIN 
         WHERE NUNOTA = CAB.NUNOTA 
           AND SEQUENCIA = ITE.SEQUENCIA 
           AND CODIMP = 7), 0
    ) * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END AS VLRCOFINS,

    ISNULL(CUS1.CUSREP, 0) AS CUSREP_UN,
    ISNULL(CUS1.CUSREP, 0) * ITE.QTDNEG * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END AS CUSREP_TOT,

    (
      (ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
      - ISNULL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 6), 0)
      - ISNULL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 7), 0)
      - ISNULL(CUS1.CUSREP, 0) * ITE.QTDNEG
    ) * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END AS MARGEMNON,

    (
      (
        (ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
        - ISNULL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 6), 0)
        - ISNULL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 7), 0)
        - ISNULL(CUS1.CUSREP, 0) * ITE.QTDNEG
      )
      * 100.0 
      / NULLIF((ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC), 0)
    ) AS PERCMARGEM

FROM TGFCAB CAB
JOIN TGFITE ITE ON CAB.NUNOTA = ITE.NUNOTA
JOIN TGFPAR PAR ON CAB.CODPARC = PAR.CODPARC
JOIN TSICID CID ON PAR.CODCID = CID.CODCID
JOIN TSIBAI BAI ON PAR.CODBAI = BAI.CODBAI
JOIN TSIEMP EMP ON CAB.CODEMP = EMP.CODEMP
JOIN TGFNAT NAT ON CAB.CODNAT = NAT.CODNAT
JOIN TSICUS CUS ON CAB.CODCENCUS = CUS.CODCENCUS
JOIN TGFTOP TOP1 ON CAB.CODTIPOPER = TOP1.CODTIPOPER
JOIN TGFTPV TPV ON CAB.CODTIPVENDA = TPV.CODTIPVENDA AND TPV.DHALTER = CAB.DHTIPVENDA
JOIN TGFVEN VEN ON CAB.CODVEND = VEN.CODVEND
LEFT JOIN TGFVEN VENG ON VENG.CODVEND = VEN.CODGER
LEFT JOIN TGFPRO PRO ON ITE.CODPROD = PRO.CODPROD
LEFT JOIN TGFPAR PARM ON PARM.CODPARC = PAR.CODPARCMATRIZ
LEFT JOIN TGFTPP TPP ON PAR.CODTIPPARC = TPP.CODTIPPARC
LEFT JOIN TGFCUS CUS1 ON CUS1.CODPROD = ITE.CODPROD AND CUS1.CODEMP = 1 AND CUS1.DTATUAL = (SELECT MAX(DTATUAL)FROM TGFCUS WHERE DTATUAL <= CAB.DTNEG AND CODPROD = ITE.CODPROD AND CODEMP = 1)
-- JOIN adicionado para integrar os dados do TESTE.sql
LEFT JOIN GRU1 ON PRO.CODPROD = GRU1.CODPROD

WHERE
    TOP1.DHALTER = (
      SELECT MAX(DHALTER)
      FROM TGFTOP
      WHERE CODTIPOPER = CAB.CODTIPOPER
    )

GO

-- =============================================
-- Verificação da criação da view
-- =============================================
IF OBJECT_ID('VW_RENTABILIDADE_ACO_MANAUS', 'V') IS NOT NULL
BEGIN
    PRINT 'SUCESSO: View VW_RENTABILIDADE_ACO_MANAUS criada/atualizada com sucesso!'
    
    -- Exibir informações da view
    SELECT 
        'View criada com sucesso' AS Status,
        'VW_RENTABILIDADE_ACO_MANAUS' AS Nome_View,
        GETDATE() AS Data_Criacao
END
ELSE
BEGIN
    PRINT 'ERRO: Falha na criação da view VW_RENTABILIDADE_ACO_MANAUS!'
END

GO 