CREATE OR REPLACE TRIGGER "TRG_INC_UPD_TGFFIN_SATIS" 
BEFORE INSERT OR UPDATE ON TGFFIN 
FOR EACH ROW
DECLARE


  ERRMSG            VARCHAR2(255);
  ERROR             EXCEPTION;
  P_VALIDAR         BOOLEAN;
  P_DTTERMINO   DATE;
  P_CODEMP              INT;
  P_COUNT_NUFIN     NUMBER;
  P_VLRNOTA         NUMBER;
  P_CONF            VARCHAR2(10);
  P_DTENTSAI    DATE;
  P_TIPMOV      VARCHAR2(10); 
  P_CODCENCUS   NUMBER;
  P_STATUSNOTA  VARCHAR2(10);
  P_CODTIPOPER  NUMBER;
  P_CODPARCDEST NUMBER;
  P_OBSERVACAO   VARCHAR2 (4000);
  

BEGIN




--ATUALIZAÇÕES RELACIONADAS A TOP 1223 (LANÇAMENTO DE MULTA)
   IF :NEW.RECDESP = 1 AND :NEW.CODTIPOPER = 1223 THEN

        BEGIN
          SELECT CODPARCDEST,   OBSERVACAO,   STATUSNOTA
            INTO P_CODPARCDEST, P_OBSERVACAO, P_CONF
            FROM TGFCAB 
           WHERE NUNOTA = :NEW.NUNOTA;
        EXCEPTION WHEN NO_DATA_FOUND THEN
            NULL;
        END;
        

        --PADRONIZA DADOS DO FINAN DE CRÉDITO (A RECEBER) ENQUANTO A NOTA NÃO ESTIVER CONFIRMADA, VIABILIZANDO QUE APÓS ISSO O USUÁRIO POSSA FAZER ALTERAÇÕES DIRETAMENTE NO FINANCEIRO.
        IF P_CONF <> 'L' THEN

        :NEW.CODPARC := P_CODPARCDEST;
        :NEW.HISTORICO := SUBSTR(P_OBSERVACAO, 1, 255);
        :NEW.DTVENC := TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') || '-20', 'YYYY-MM-DD');
        --:NEW.RECDESP := 1;

        END IF;

   END IF;







  P_VALIDAR := Fpodevalidar('TGFFIN');

  IF :NEW.DTENTSAI IS NULL THEN 
    :NEW.DTENTSAI := TRUNC(:NEW.DHMOV);
  END IF;

  IF :NEW.CODPROJ > 0 THEN
    BEGIN 
      SELECT DTTERMINO, CODEMP 
        INTO P_DTTERMINO , P_CODEMP
        FROM TCSPRJ
      WHERE CODPROJ = :NEW.CODPROJ;
    EXCEPTION WHEN NO_DATA_FOUND THEN
      P_DTTERMINO := NULL;
    END;
  END IF;

  IF P_DTTERMINO IS NOT NULL 
     AND (INSERTING OR UPDATING) 
     AND :NEW.DHBAIXA IS NULL 
     AND :OLD.DHBAIXA IS NULL THEN
    RAISE_APPLICATION_ERROR(-20101,'Atenção - Projeto Finalizado não pode ser utilizado!');
  END IF;

  -- Atualiza CODPROJ = 0 se for um título ICMS com CODPROJ nulo
  IF :NEW.CODNAT = 2011000 AND :NEW.CODTIPTIT = 32 AND :NEW.CODTIPOPER = 1300 AND :NEW.CODPROJ IS NULL THEN
      :NEW.CODPROJ := 0;
  END IF;

  IF :NEW.CODPROJ = 0 AND :NEW.ORIGEM = 'F' AND :NEW.DHBAIXA IS NULL AND :NEW.nossonum IS NULL THEN
    RAISE_APPLICATION_ERROR(-20101,'Atenção - Favor Informar o Projeto');
  END IF;

  IF :NEW.DHBAIXA < :NEW.DTENTSAI  
     AND NVL(:NEW.NUDEV,0) = 0 
     AND :NEW.PROVISAO <> 'S' THEN
    RAISE_APPLICATION_ERROR(-20101,'Data da Baixa não pode ser menor que a data de Entrada e Saida Nro Nota'||:NEW.numnota);
  END IF;

  IF NVL(:NEW.NUFIN,0) <> 0 
     AND NVL(:NEW.AD_PERCFIN,0) <> 0 
     AND NVL(:OLD.AD_PERCFIN,0) <> NVL(:NEW.AD_PERCFIN,0) THEN
    SELECT VLRNOTA INTO P_VLRNOTA FROM TGFCAB WHERE NUNOTA = NVL(:NEW.NUNOTA, 0);
    SELECT STATUSNOTA INTO P_CONF FROM TGFCAB WHERE NUNOTA = NVL(:NEW.NUNOTA, 0);

    IF P_CONF <> 'L' THEN
      :NEW.VLRDESDOB := P_VLRNOTA * (:NEW.AD_PERCFIN / 100);
    END IF;
  END IF;

  IF NVL(:NEW.NUFIN,0) <> 0 
     AND NVL(:NEW.AD_DIASVENC,0) <> 0 
     AND NVL(:OLD.AD_DIASVENC,0) <> NVL(:NEW.AD_DIASVENC,0) THEN
    SELECT STATUSNOTA, DTENTSAI INTO P_CONF, P_DTENTSAI 
      FROM TGFCAB 
     WHERE NUNOTA = NVL(:NEW.NUNOTA, 0);

    IF P_CONF <> 'L' THEN
      :NEW.DTVENC := P_DTENTSAI + :NEW.AD_DIASVENC;
    END IF;
  END IF;

EXCEPTION
  WHEN ERROR THEN
    IF (P_VALIDAR) THEN 
      RAISE_APPLICATION_ERROR(-20101, ERRMSG);
    END IF;
END;
/
