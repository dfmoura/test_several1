CREATE OR REPLACE TRIGGER SANKHYA.TRG_INC_UPD_TGFCAB_MTC
BEFORE INSERT OR UPDATE  ON SANKHYA.TGFCAB    FOR EACH ROW
DECLARE
    NVLDATE DATE;
    P_COUNT     NUMBER;
    P_CONTAPAD      NUMBER;
    P_ATUALMOVFIS       CHAR;
    P_GERAOBSNFSE       CHAR;
    P_VALBOLETO         CHAR;
    P_OBSNFSE           VARCHAR2(4000);
    P_OBSNFSE_ITENS     VARCHAR2(4000);
    P_CODNATPAD NUMBER;
    P_VALCOOP   NUMBER;
    P_COOP      NUMBER;
    P_TIPGERBOL     CHAR;
    P_EMAILNFE      NUMBER;
    
BEGIN


SELECT NVL(TOP.AD_VALCOOP,0), NVL(AD_ATUALOBSNFSE,'N'), NVL(AD_VALBOLETO,'N') INTO P_VALCOOP, P_GERAOBSNFSE, P_VALBOLETO FROM TGFTOP TOP WHERE TOP.CODTIPOPER=:NEW.CODTIPOPER AND TOP.DHALTER=(SELECT MAX(DHALTER) FROM TGFTOP WHERE CODTIPOPER = :NEW.CODTIPOPER);
SELECT NVL(AD_COOPERADO,2) INTO P_COOP  FROM TGFPAR WHERE CODPARC = :NEW.CODPARC;

--INCLUI O PARCEIRO DESTINATÁRIO NAS NOTAS DE COMPRA PARA REVENDA, ISSO IRÁ POSSIBILITAR A GERAÇÃO DA NOTA DE REMESSA
IF :NEW.CODTIPOPER IN (6,200)  THEN

:NEW.CODPARCDEST := :NEW.CODPARC;

END IF;


/*---------------------------------------------------------------*/
--ATUALIZA MOVIMENTAÇÃO FISCAL NO PARCEIRO
IF :NEW.STATUSNOTA = 'L' AND (:NEW.STATUSNFE='A' OR :NEW.STATUSNFE IS NULL) THEN

    SELECT AD_ATUALMOVPARC INTO P_ATUALMOVFIS FROM TGFTOP WHERE CODTIPOPER=:NEW.CODTIPOPER AND DHALTER=:NEW.DHTIPOPER;

        IF P_ATUALMOVFIS='S' THEN
        
        UPDATE TGFPAR SET AD_REGMOV='S' WHERE CODPARC=:NEW.CODPARC;
        
        END IF;

END IF;


/*---------------------------------------------------------------*/
--VALIDA RESTRIÇÃO DE COOPERADO DA TOP

    IF P_VALCOOP = 1 AND P_COOP <> 1 THEN  --TOP EXIGE COOPERADO E PARCEIRO NÃO É COOPERADO
    
        RAISE_APPLICATION_ERROR(-20001, '<br><b>O tipo de operação (TOP) selecionado permite apenas pareciros COOPERADOS.</b><br>');
    
    END IF;

    IF P_VALCOOP = 2 AND P_COOP <> 2 THEN  --TOP EXIGE NÃO COOPERADO E PARCEIRO É COOPERADO
    
        RAISE_APPLICATION_ERROR(-20001, '<br><b>O tipo de operação (TOP) selecionado permite apenas pareciros NÃO COOPERADOS.</b><br>');
    
    END IF;

/*---------------------------------------------------------------*/


--ATUALIZA O CAMPO DE OBSERVAÇÃO DA NFSE CONFORME O PADRÃO ESPERADO PELA MONTECCER. ESSA OBSERVAÇÃO SERÁ DESTACADA NA NFSE NA PREFEITURA
--EXECUTA APENAS QUANDO A TOP ESTIVER CONFIGURADA PARA TAL E A NOTA NFSE NÃO ESTIVER APROVADA
IF P_GERAOBSNFSE = 'S' AND NVL(:NEW.STATUSNFSE,'N') <> 'A'  THEN

    SELECT
    COOPERADO||' - '||CASE WHEN DTVENC <= DTNEG THEN 'A VISTA, VCTO ' ELSE 'A PRAZO, VCTO ' END||DTVENC||CASE WHEN PERINI IS NOT NULL AND PERFIN IS NOT NULL THEN ' - PERIODO: '||PERINI||' ATE '||PERFIN||'.' ELSE '' END AS OBSNFSE
    INTO P_OBSNFSE
    FROM(
            SELECT
            NVL((SELECT CASE WHEN VALORNOVO = 1 THEN 'COOPERADO' ELSE 'NÃO COOPERADO' END FROM AD_AUDITCOOP WHERE CODPARC = :NEW.CODPARC AND DTINC = (SELECT MAX(A.DTINC) FROM AD_AUDITCOOP A WHERE A.CODPARC = :NEW.CODPARC AND A.DTINC <= :NEW.DTNEG)), CASE WHEN PAR.AD_COOPERADO = 1 THEN 'COOPERADO' ELSE 'NÃO COOPERADO' END) AS COOPERADO
            ,(SELECT MIN(DTVENC) FROM TGFFIN WHERE NUNOTA = :NEW.NUNOTA) AS DTVENC
            ,:NEW.DTNEG AS DTNEG
            ,:NEW.AD_PERIODOFECHINI AS PERINI
            ,:NEW.AD_PERIODOFECHFIN AS PERFIN
            FROM TGFPAR PAR
            WHERE PAR.CODPARC = :NEW.CODPARC
            );
    
    :NEW.AD_OBSNFSE := P_OBSNFSE;
    
    IF :NEW.STATUSNOTA = 'L' AND NVL(:NEW.STATUSNFSE,'N') <> 'A' THEN
    
            SELECT
            LISTAGG('Cód.: '||NVL(PRO.AD_IDPROCAFE,ITE.CODPROD)||' - '||PRO.DESCRPROD||' - [ Vlr.Serv.: R$'||(ITE.VLRTOT)||
            CASE WHEN ITE.VLRDESC IS NULL THEN NULL ELSE ' - Vlr.Desc.: R$'||ITE.VLRDESC END ||' = Vlr.Liq..: R$'||(ITE.VLRTOT-ITE.VLRDESC)||']'
            , CHR(10)) AS ITENS
            
            INTO P_OBSNFSE_ITENS
            FROM TGFITE ITE
            LEFT JOIN TGFPRO PRO ON ITE.CODPROD = PRO.CODPROD
            WHERE ITE.NUNOTA = :NEW.NUNOTA;
    
            :NEW.OBSERVACAO :=  P_OBSNFSE || CASE WHEN :NEW.AD_OBSNFSEDIGITADA IS NOT NULL THEN :NEW.AD_OBSNFSEDIGITADA||CHR(10) ELSE '' END || CHR(10) || P_OBSNFSE_ITENS;
    
    END IF;

END IF;


/*---------------------------------------------------------------*/
--AO INSERIR...
--VALIDAÇÕES AO INSERIR O CABEÇALHO
IF INSERTING THEN

    IF  :NEW.CODTIPOPER IN (7,8) THEN
    
    :NEW.OBSERVACAO := '';
    :NEW.QTDVOL := 0;
    
    END IF;

    --NATUREZA PADRÃO DEFINIDA NA TOP
    SELECT NVL(TOP.AD_CODNATPADRAO,0) INTO P_CODNATPAD FROM TGFTOP TOP WHERE TOP.CODTIPOPER=:NEW.CODTIPOPER AND TOP.DHALTER=(SELECT MAX(DHALTER) FROM TGFTOP WHERE CODTIPOPER = :NEW.CODTIPOPER);
    IF P_CODNATPAD <> 0 THEN
    
        :NEW.CODNAT := P_CODNATPAD;
    
    END IF;
    
    --VENDEDOR PADRÃO QUANDO NÃO INFORMAD
    IF NVL(:NEW.CODVEND,0) = 0 THEN
    
        :NEW.CODVEND := 10;
    
    END IF;

END IF;


/*---------------------------------------------------------------*/
--ATUALIZA O LOCAL PADRÃO DO ITENS PARA O ESTOQUE PRÓPRIO EXTERNO CONFORME CONFIGURAÇÃO DO CABEÇALHO (CAB.AD_ARZEST)
IF :NEW.AD_ARZEXT = 'S' THEN 
    UPDATE TGFITE SET CODLOCALORIG = 1040300 WHERE NUNOTA = :NEW.NUNOTA;
END IF;


/*---------------------------------------------------------------*/
IF :NEW.STATUSNOTA = 'L' AND P_VALBOLETO = 'S' THEN

    SELECT TIPGERBOLCENT, CASE WHEN EMAILNFE LIKE '%@%' THEN 1 ELSE 0 END AS EMAIL INTO P_TIPGERBOL, P_EMAILNFE
    FROM TGFPAR
    WHERE CODPARC = :NEW.CODPARC;

    SELECT COUNT(*) INTO P_COUNT FROM TGFFIN WHERE NUNOTA = :NEW.NUNOTA AND CODTIPTIT = 4;

    IF P_COUNT > 0 THEN

        IF P_TIPGERBOL <> 'A' THEN
        
            UPDATE TGFPAR SET TIPGERBOLCENT = 'A' WHERE CODPARC = :NEW.CODPARC;
        
        END IF;

        IF P_EMAILNFE = 0 THEN
        
            RAISE_APPLICATION_ERROR(-20001, '<br><b>Para enviar o boleto por email é necessário que o parceiro possui email informado no cadastro do parceiro, campo "E-mail p/ envio NF-e/NFS-e/CT-e"</b><br>');
            
        END IF;

    END IF;

END IF;

END;
/