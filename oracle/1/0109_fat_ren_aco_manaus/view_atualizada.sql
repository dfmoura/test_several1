CREATE VIEW VW_RENTABILIDADE_ACO AS
WITH GRU AS (
    SELECT
        G.CODGRUPOPROD,
        
           CASE 
            WHEN G.GRAU=1 THEN G.CODGRUPOPROD
                
            WHEN G.GRAU IN (2,
            3) THEN G.CODGRUPAI
                
            ELSE NULL 
        END CODGRUPAI,
        
           COALESCE(G1.DESCRGRUPOPROD,
        G.DESCRGRUPOPROD) DESCRGRUPO_NIVEL1
    
    FROM
        TGFGRU G
    
    LEFT JOIN
        TGFGRU G1 
            ON ((G.GRAU=1 
            AND G1.CODGRUPOPROD=G.CODGRUPOPROD)
                         
            OR (G.GRAU=2 
            AND G1.CODGRUPOPROD=G.CODGRUPAI 
            AND G1.GRAU=1)
                         
            OR (G.GRAU=3 
            AND G1.CODGRUPOPROD=(SELECT
                G2.CODGRUPOPROD 
        FROM
            TGFGRU G2 
        WHERE
            G2.CODGRUPOPROD=G.CODGRUPAI) 
        AND G1.GRAU=1))
    
    WHERE
        G.CODGRUPOPROD>0
),
GRU1 AS (
    SELECT
            PRO.CODPROD,
            PRO.DESCRPROD,
            GRU.CODGRUPAI,
            GRU.DESCRGRUPO_NIVEL1,
            VOA.CODVOL,
            VOA.DIVIDEMULTIPLICA,
            VOA.QUANTIDADE
    
        FROM
            TGFPRO PRO
    
        INNER JOIN
            TGFVOA VOA 
                ON PRO.CODPROD=VOA.CODPROD
    
        INNER JOIN
            GRU 
                ON PRO.CODGRUPOPROD=GRU.CODGRUPOPROD
    
        WHERE
            VOA.CODVOL='KG' 
            AND PRO.CODGRUPOPROD>0
),
VALORES_PROPORCIONAIS AS (
    SELECT
            ITE.NUNOTA,
            
           ITE.SEQUENCIA,
            
           ITE.VLRTOT,
            
           CAB.VLRDESCTOT,
            
           CAB.VLRSUBST,
            
           CAB.VLRREPREDTOT,
            
           CAB.VLRNOTA,
            
           SUM(ITE.VLRTOT) OVER (PARTITION 
        BY
            ITE.NUNOTA) AS TOTAL_NOTA,
            
           CASE 
                WHEN SUM(ITE.VLRTOT) OVER (PARTITION 
            BY
                ITE.NUNOTA) = 0 THEN 0 
                
                ELSE ITE.VLRTOT / SUM(ITE.VLRTOT) OVER (PARTITION 
            BY
                ITE.NUNOTA) 
            END AS PROPORCAO_ITEM
    
        FROM
            TGFITE ITE
    
        INNER JOIN
            TGFCAB CAB 
                ON ITE.NUNOTA = CAB.NUNOTA
),
ULT_PRE AS (
    SELECT
        EXC.CODPROD,
        ISNULL(EXC.VLRVENDA, 0) AS ULT_PRE_UN,
        ROW_NUMBER() OVER (
            PARTITION BY EXC.CODPROD
            ORDER BY TAB.DTVIGOR DESC
        ) AS RN
    FROM TGFEXC EXC
    INNER JOIN TGFTAB TAB 
        ON EXC.NUTAB = TAB.NUTAB
    INNER JOIN TGFNTA NTA 
        ON TAB.CODTAB = NTA.CODTAB
    WHERE 
        NTA.ATIVO = 'S' 
        AND TAB.DTVIGOR <= GETDATE()
)


SELECT 
CAB.NUNOTA,
        ITE.SEQUENCIA,
        CAB.CODEMP,
        EMP.NOMEFANTASIA EMPRESA,
        CAB.TIPMOV,
        CAB.DTNEG,
        TOP1.ATIVO ATIVO_TOP,
        CAB.CODNAT,
        
NAT.DESCRNAT,
        NAT.ATIVA ATIVA_NAT,
        NAT.AD_TIPOCUSTO TIPOCUSTO,
        CAB.CODCENCUS,
        CUS.DESCRCENCUS,
        CUS.ATIVO ATIVO_CR,
        CAB.CODVEND,
        
CASE 
        WHEN ISNULL(CAB.CODVEND,
        0)=0 THEN 'SEM INFORMACAO' 
        ELSE VEN.APELIDO 
    END VENDEDOR,
    ISNULL(VEN.CODGER,
    0) CODGER,
    
CASE 
    WHEN ISNULL(VEN.CODGER,
    0)=0 THEN 'SEM INFORMACAO' 
    ELSE VENG.APELIDO 
END GERENTE,
CAB.CODPARC,
PAR.NOMEPARC,

PAR.CODTIPPARC,
UPPER(CASE 
    WHEN TPP.DESCRTIPPARC='<SEM TIPO PARCEIRO>' THEN 'SEM INFORMACAO' 
    ELSE TPP.DESCRTIPPARC 
END) DESCRTIPPARC,

PAR.CODCID,
UPPER(CID.NOMECID) NOMECID,
PAR.CODBAI,
BAI.NOMEBAI,
CAB.CODTIPOPER,
TOP1.DESCROPER,
TOP1.AD_COMPOE_FAT,
ITE.CODPROD,
PRO.DESCRPROD,

ITE.CODVOL,
ISNULL(GRU1.CODGRUPAI,
0) CODGRUPAI,
ISNULL(GRU1.DESCRGRUPO_NIVEL1,
'SEM GRUPO') DESCRGRUPO_NIVEL1,

ISNULL(GRU1.DIVIDEMULTIPLICA,
0) DIVIDEMULTIPLICA,
ISNULL(GRU1.QUANTIDADE,
0) QUANTIDADE_VOLUME,



(CASE 
    WHEN ITE.CODVOL<>'KG' THEN CASE 
        WHEN GRU1.DIVIDEMULTIPLICA='D' THEN ITE.QTDNEG*GRU1.QUANTIDADE 
        WHEN GRU1.DIVIDEMULTIPLICA='M' THEN ITE.QTDNEG/GRU1.QUANTIDADE 
    END 
    ELSE ITE.QTDNEG 
END) KG,

(CASE 
    WHEN ITE.CODVOL<>'KG' THEN CASE 
        WHEN GRU1.DIVIDEMULTIPLICA='D' THEN ITE.QTDNEG*GRU1.QUANTIDADE 
        WHEN GRU1.DIVIDEMULTIPLICA='M' THEN ITE.QTDNEG/GRU1.QUANTIDADE 
    END 
    ELSE ITE.QTDNEG 
END)/1000 TON,




ITE.VLRUNIT,

ISNULL(UP.ULT_PRE_UN, 0) AS ULT_PRE_UN,


ITE.QTDNEG * CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END QTDNEG,

ITE.VLRTOT,



ITE.VLRIPI*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END VLRIPI,

/*ITE.VLRSUBST*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END VLRSUBST ,
JA ESTA SENDO CONSIDERADO NO VLRFAT*/
ITE.VLRICMS*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END VLRICMS,

ISNULL((SELECT
    SUM(VALOR) 
FROM
    TGFDIN 
WHERE
    NUNOTA=CAB.NUNOTA 
    AND SEQUENCIA=ITE.SEQUENCIA 
    AND CODIMP=6),
0)*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END VLRPIS,

ISNULL((SELECT
    SUM(VALOR) 
FROM
    TGFDIN 
WHERE
    NUNOTA=CAB.NUNOTA 
    AND SEQUENCIA=ITE.SEQUENCIA 
    AND CODIMP=7),
0)*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END VLRCOFINS,


ISNULL(CUS1.CUSSEMICM,
0) CUSSEMICM_UN,

ISNULL(CUS1.CUSSEMICM,
0) * ITE.QTDNEG * CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END CUSSEMICM_TOT,



ITE.VLRIPI*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END -/*VLRIPI,
*/
ITE.VLRICMS*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END -/*VLRICMS,
*/
ISNULL((SELECT
    SUM(VALOR) 
FROM
    TGFDIN 
WHERE
    NUNOTA=CAB.NUNOTA 
    AND SEQUENCIA=ITE.SEQUENCIA 
    AND CODIMP=6),
0)*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END -/*VLRPIS,
*/
ISNULL((SELECT
    SUM(VALOR) 
FROM
    TGFDIN 
WHERE
    NUNOTA=CAB.NUNOTA 
    AND SEQUENCIA=ITE.SEQUENCIA 
    AND CODIMP=7),
0)*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END -/*VLRCOFINS,
*/
ISNULL(CUS1.CUSSEMICM,
0) * ITE.QTDNEG * CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END /*CUSSEMICM_TOT,
*/
AS MARGEMNON,


(
ITE.VLRIPI*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END -/*VLRIPI,
*/
ITE.VLRICMS*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END -/*VLRICMS,
*/
ISNULL((SELECT
    SUM(VALOR) 
FROM
    TGFDIN 
WHERE
    NUNOTA=CAB.NUNOTA 
    AND SEQUENCIA=ITE.SEQUENCIA 
    AND CODIMP=6),
0)*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END -/*VLRPIS,
*/
ISNULL((SELECT
    SUM(VALOR) 
FROM
    TGFDIN 
WHERE
    NUNOTA=CAB.NUNOTA 
    AND SEQUENCIA=ITE.SEQUENCIA 
    AND CODIMP=7),
0)*CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END -/*VLRCOFINS,
*/
ISNULL(CUS1.CUSSEMICM,
0) * ITE.QTDNEG * CASE 
    WHEN CAB.TIPMOV='D' THEN -1 
    ELSE 1 
END /*CUSSEMICM_TOT,
*/
)
/
CASE 
WHEN CAB.TIPMOV = 'V' THEN VP.VLRNOTA * VP.PROPORCAO_ITEM END
PERCMARGEM,

VP.VLRDESCTOT * VP.PROPORCAO_ITEM AS VLRDESCTOT_PROP,

VP.VLRSUBST * VP.PROPORCAO_ITEM AS VLRSUBST_PROP,

VP.VLRREPREDTOT * VP.PROPORCAO_ITEM AS VLRREPREDTOT_PROP,

CASE 
WHEN CAB.TIPMOV = 'V' THEN (ITE.VLRDESC+(VP.VLRDESCTOT * VP.PROPORCAO_ITEM))
END AS VLRDESC,

CASE 
WHEN CAB.TIPMOV = 'D' THEN VP.VLRNOTA * VP.PROPORCAO_ITEM 
END VLRDEV,

CASE 
WHEN CAB.TIPMOV = 'V' THEN VP.VLRNOTA * VP.PROPORCAO_ITEM 
END AS VLRNOTA,



ROW_NUMBER() OVER (
ORDER BY
CAB.NUNOTA,
ITE.SEQUENCIA) AS Rownum
FROM TGFCAB CAB
JOIN TGFITE ITE 
ON CAB.NUNOTA=ITE.NUNOTA
JOIN TGFPAR PAR 
ON CAB.CODPARC=PAR.CODPARC
JOIN TSICID CID 
ON PAR.CODCID=CID.CODCID
JOIN TSIBAI BAI 
    ON PAR.CODBAI=BAI.CODBAI
JOIN TSIEMP EMP 
        ON CAB.CODEMP=EMP.CODEMP
JOIN TGFNAT NAT 
            ON CAB.CODNAT=NAT.CODNAT
JOIN TSICUS CUS 
                ON CAB.CODCENCUS=CUS.CODCENCUS
JOIN TGFTOP TOP1 
                    ON CAB.CODTIPOPER=TOP1.CODTIPOPER
JOIN TGFTPV TPV 
                        ON CAB.CODTIPVENDA=TPV.CODTIPVENDA 
                        AND TPV.DHALTER=CAB.DHTIPVENDA
JOIN TGFVEN VEN 
                            ON CAB.CODVEND=VEN.CODVEND
LEFT 
                    JOIN
                        TGFVEN VENG 
                            ON VENG.CODVEND=VEN.CODGER
LEFT 
                    JOIN
                        TGFPRO PRO 
                            ON ITE.CODPROD=PRO.CODPROD
LEFT 
                    JOIN
                        TGFPAR PARM 
                            ON PARM.CODPARC=PAR.CODPARCMATRIZ
LEFT 
                    JOIN
                        TGFTPP TPP 
                            ON PAR.CODTIPPARC=TPP.CODTIPPARC
LEFT 
                    JOIN
                        TGFCUS CUS1 
                            ON CUS1.CODPROD=ITE.CODPROD 
                            AND CUS1.CODEMP=1 
                            AND CUS1.DTATUAL=(
                                SELECT
                                    MAX(DTATUAL) 
                            FROM
                                TGFCUS 
                            WHERE
                                DTATUAL<=CAB.DTNEG 
                                AND CODPROD=ITE.CODPROD 
                                AND CODEMP=1
                        )
LEFT 
                    JOIN
                        GRU1 
                            ON PRO.CODPROD=GRU1.CODPROD
LEFT 
                    JOIN
                        VALORES_PROPORCIONAIS VP 
                            ON VP.NUNOTA=CAB.NUNOTA 
                            AND VP.SEQUENCIA=ITE.SEQUENCIA
LEFT 
                    JOIN
                        ULT_PRE UP 
                            ON UP.CODPROD=ITE.CODPROD 
                            AND UP.RN=1
WHERE TOP1.DHALTER=(
                                SELECT
                                    MAX(DHALTER) 
                            FROM
                                TGFTOP 
                            WHERE
                                CODTIPOPER=CAB.CODTIPOPER
                        )