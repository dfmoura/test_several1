

### **Sistema de Gest√£o de Or√ßamento ‚Äì Descri√ß√£o Funcional**

O **Sistema de Gest√£o de Or√ßamento** tem como objetivo centralizar e organizar o processo de elabora√ß√£o, aprova√ß√£o e controle de or√ßamentos corporativos de forma simples e eficiente.

---

### **1. Estrutura do Sistema**

#### **1.1. Vers√£o de Or√ßamento**

* O sistema inicia com a **cria√ß√£o de uma vers√£o de or√ßamento**, que representa um ciclo or√ßament√°rio (ex: Or√ßamento 2025, Revis√£o 1, etc.).
* Cada vers√£o pode ser **criada, duplicada, editada ou encerrada**.
* A vers√£o de or√ßamento funciona como o **n√≠vel principal** da estrutura de gest√£o.

---

#### **1.2. CRs (Centros de Responsabilidade)**

* Cada vers√£o de or√ßamento cont√©m **v√°rios CRs** (Centros de Responsabilidade).
* Cada CR possui:

  * Um **respons√°vel designado** (usu√°rio do sistema).
  * Um **status** (em edi√ß√£o, submetido, aprovado, rejeitado).
  * Um **hist√≥rico de altera√ß√µes** (quem modificou, quando e o que foi alterado).
* O respons√°vel por cada CR √© o ponto de controle para inserir, revisar e submeter os dados do seu centro.

---

#### **1.3. Plano de Contas**

* Dentro de cada CR, h√° uma **estrutura de contas** conforme o **plano de contas da empresa**.
* Cada conta possui:

  * **C√≥digo e descri√ß√£o da conta**.
  * **Valor proposto**.
  * **Valor aprovado** (ap√≥s valida√ß√£o).
  * **Observa√ß√µes ou justificativas** opcionais.

---

### **2. Fluxo de Intera√ß√µes**

#### **2.1. Cria√ß√£o**

1. O administrador cria uma **nova vers√£o de or√ßamento**.
2. Define os **CRs** e **respons√°veis** associados.
3. O sistema gera automaticamente as **contas padr√£o** do plano de contas para cada CR.

#### **2.2. Edi√ß√£o e Submiss√£o**

1. Cada respons√°vel acessa seu CR.
2. Preenche ou ajusta os valores por conta.
3. Submete o CR para aprova√ß√£o.

#### **2.3. Aprova√ß√£o**

1. O aprovador (gestor ou controladoria) revisa as informa√ß√µes submetidas.
2. Pode **aprovar**, **rejeitar** ou **solicitar ajustes**.
3. O sistema registra todas as a√ß√µes em **log de auditoria**.

#### **2.4. Consolida√ß√£o**

* Ap√≥s a aprova√ß√£o de todos os CRs, o sistema permite a **consolida√ß√£o total** da vers√£o do or√ßamento, exibindo relat√≥rios e totais por:

  * CR
  * Conta
  * Centro de custo
  * Categoria ou tipo de despesa

---

### **3. Funcionalidades Adicionais**

* **Hist√≥rico de vers√µes**: consulta a vers√µes anteriores e compara√ß√£o entre elas.
* **Controle de permiss√µes**: perfis de acesso diferenciados (administrador, respons√°vel, aprovador, visualizador).
* **Exporta√ß√£o de dados**: planilhas e relat√≥rios em PDF ou Excel.
* **Painel de status**: vis√£o geral de progresso (quantos CRs pendentes, aprovados, rejeitados).
* **Notifica√ß√µes autom√°ticas**: alertas por e-mail ou sistema (ex: ‚ÄúCR aprovado‚Äù, ‚Äúvers√£o encerrada‚Äù).

---

### **4. Benef√≠cios**

* Simplifica o processo de elabora√ß√£o or√ßament√°ria.
* Centraliza informa√ß√µes e evita planilhas dispersas.
* Permite rastreabilidade e controle de altera√ß√µes.
* Facilita a an√°lise consolidada e a tomada de decis√£o.

---



---

## üß© Descri√ß√£o do problema

* O sistema possui **vers√µes de or√ßamento**.
* Cada **vers√£o** cont√©m v√°rios **CRs** (Centros de Responsabilidade).
* Cada **CR** possui um **respons√°vel** (usu√°rio).
* Cada **CR** tem v√°rias **contas** do **plano de contas**, com **valores or√ßados** (a serem aprovados).

---

## üóÇÔ∏è Modelo de Tabelas (MySQL)

### 1Ô∏è‚É£ `versao_orcamento`

Guarda as vers√µes do or√ßamento criadas.

```sql
CREATE TABLE versao_orcamento (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
    status ENUM('rascunho', 'em_aprovacao', 'aprovado', 'rejeitado') DEFAULT 'rascunho'
);
```

---

### 2Ô∏è‚É£ `responsavel`

Tabela de respons√°veis (usu√°rios do sistema).

```sql
CREATE TABLE responsavel (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(150) UNIQUE,
    cargo VARCHAR(100),
    ativo BOOLEAN DEFAULT TRUE
);
```

---

### 3Ô∏è‚É£ `cr` (Centro de Responsabilidade)

Cada CR pertence a uma **vers√£o de or√ßamento** e tem um **respons√°vel**.

```sql
CREATE TABLE cr (
    id INT AUTO_INCREMENT PRIMARY KEY,
    codigo VARCHAR(20) NOT NULL,
    nome VARCHAR(100) NOT NULL,
    id_versao INT NOT NULL,
    id_responsavel INT,
    FOREIGN KEY (id_versao) REFERENCES versao_orcamento(id),
    FOREIGN KEY (id_responsavel) REFERENCES responsavel(id)
);
```

---

### 4Ô∏è‚É£ `plano_contas`

Plano de contas padr√£o (estrutura cont√°bil).

```sql
CREATE TABLE plano_contas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    codigo VARCHAR(20) NOT NULL,
    descricao VARCHAR(150) NOT NULL,
    tipo ENUM('receita', 'despesa', 'outro') DEFAULT 'despesa'
);
```

---

### 5Ô∏è‚É£ `cr_conta`

Tabela que relaciona **CRs** com **contas do plano de contas** e armazena **valores or√ßados**.

```sql
CREATE TABLE cr_conta (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_cr INT NOT NULL,
    id_plano_conta INT NOT NULL,
    valor_orcado DECIMAL(15,2) DEFAULT 0,
    valor_aprovado DECIMAL(15,2) DEFAULT 0,
    observacao VARCHAR(255),
    FOREIGN KEY (id_cr) REFERENCES cr(id),
    FOREIGN KEY (id_plano_conta) REFERENCES plano_contas(id)
);
```

---

### 6Ô∏è‚É£ (Opcional) `historico_aprovacao`

Caso queira registrar quem aprovou e quando.

```sql
CREATE TABLE historico_aprovacao (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_versao INT NOT NULL,
    id_responsavel INT NOT NULL,
    data_aprovacao DATETIME DEFAULT CURRENT_TIMESTAMP,
    status ENUM('aprovado', 'rejeitado') NOT NULL,
    comentario TEXT,
    FOREIGN KEY (id_versao) REFERENCES versao_orcamento(id),
    FOREIGN KEY (id_responsavel) REFERENCES responsavel(id)
);
```

---

## üìä Diagrama l√≥gico (resumo das rela√ß√µes)

```
versao_orcamento ‚îÄ‚îÄ‚îÄ< cr ‚îÄ‚îÄ‚îÄ< cr_conta >‚îÄ‚îÄ‚îÄ plano_contas
                         ‚îÇ
                         ‚îî‚îÄ‚îÄ‚îÄ responsavel
```

---

## ‚úÖ Benef√≠cios do modelo

* Permite m√∫ltiplas vers√µes de or√ßamento.
* Cada vers√£o √© independente (com seus CRs e valores).
* Escal√°vel para incluir hist√≥rico de aprova√ß√µes, revis√µes e workflows.
* Facilita consultas agregadas (por CR, por conta, por vers√£o etc.).

---

Quer que eu monte tamb√©m o **script SQL completo** (com `INSERT` de exemplo e algumas consultas padr√£o, como totais por CR ou por vers√£o)?



