<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<%@ page language="java" contentType="text/html; charset=ISO-8859-1" pageEncoding="UTF-8" isELIgnored="false" %>
<%@ page import="java.util.*" %>
<%@ taglib uri="http://java.sun.com/jstl/core_rt" prefix="c" %>
<%@ taglib prefix="snk" uri="/WEB-INF/tld/sankhyaUtil.tld" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tela de Devoluções</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #ffffff;
        }
        .container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 60px; /* Ajuste do gap para aumentar o espaçamento vertical */
            width: 90%;
            height: 90%;
        }
        .section {
            display: flex;
            flex-direction: column;
            gap: 30px; /* Ajuste do gap para aumentar o espaçamento vertical */
        }
        .part {
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 20px;
            width: 100%;
            height: calc(50% - 20px); /* Ajuste da altura para refletir o novo gap */
            overflow: hidden; /* Impede que o conteúdo altere o tamanho da parte */
            position: relative; /* Necessário para posicionar o título */
            display: flex;
            flex-direction: column;
            justify-content: center; /* Centraliza verticalmente */
            align-items: center; /* Centraliza horizontalmente */
        }
        .part-title {
            position: absolute;
            top: 10px; /* Espaçamento do topo */
            left: 50%;
            transform: translateX(-50%);
            font-size: 18px;
            font-weight: bold;
            color: #333;
            background-color: #fff; /* Cor de fundo para legibilidade */
            padding: 0 10px; /* Espaçamento horizontal */
        }
        .chart-container {
            width: 80%; /* Ajuste da largura do gráfico */
            height: 80%; /* Ajuste da altura do gráfico */
            display: flex;
            justify-content: center; /* Centraliza horizontalmente o gráfico */
            align-items: center; /* Centraliza verticalmente o gráfico */
        }

        .chart-overlay {
            position: absolute;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
            font-weight: bold;
            color: #333;
            left: 56%; /* Move o overlay 10% para a direita */
            transform: translateX(45%); /* Ajusta a posição do texto para centralizá-lo */
            /*text-align: center; Opcional, para centralizar o texto se ele tiver várias linhas */            
        }

        .dropdown-container {
            display: flex;
            justify-content: flex-start; /* Alinha o dropdown à esquerda */
            width: 100%;
        }
        .dropdown-container select {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            width: 100%;
            max-width: 300px; /* Limita a largura máxima do dropdown */
        }
        canvas {
            width: 100% !important;
            height: 100% !important;
        }
        /* Estilo para a tabela */
        .table-container {
            width: 100%; /* Largura da tabela ajustada para o contêiner */
            height: 100%;
            max-height: 200px; /* Define a altura máxima para o contêiner da tabela */
            overflow-y: auto; /* Habilita a rolagem vertical */
            overflow-x: hidden; /* Desabilita a rolagem horizontal */
            padding-right: 10px; /* Espaço para evitar o corte do conteúdo na rolagem */
            font-size: 12px;
        }
        .table-container table {
            width: 100%;
            border-collapse: collapse;
        }
        .table-container th, .table-container td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: left;
        }
        .table-container th {
            background-color: #f4f4f4;
            position: sticky;
            top: 0; /* Fixa o cabeçalho no topo ao rolar */
            z-index: 2; /* Garante que o cabeçalho fique sobre o conteúdo */
        }
        .table-container tr:hover {
            background-color: #f1f1f1;
        }
    </style>
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css">

    <snk:load/>

</head>

<snk:query var="mar_tot">
    SELECT SUM(MARGEMNON) MARGEMNON
    FROM (
    
    SELECT
    CAB.CODEMP,
    EMP.NOMEFANTASIA,
    CAB.NUNOTA,
    CAB.NUMNOTA,
    VEN.CODVEND||'-'||VEN.APELIDO AS VENDEDOR,
    VENS.CODVEND||'-'||VENS.APELIDO AS SUPERVISOR,
    VENG.CODVEND||'-'||VENG.APELIDO AS GERENTE,
    SUM((FC_QTDALT_HL(ITE.CODPROD, ITE.QTDNEG, 'HL') * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END)) AS HL,
    SUM((FC_QTDALT_HL(ITE.CODPROD, ITE.QTDNEG, 'HL') * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END)) * 100 AS LT,
    CAB.VLRNOTA * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRNOTA,
    SUM(NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS CUSMEDSICM_TOT,
    SUM(ITE.VLRTOT) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRTOT,
    SUM(ITE.BASEIPI) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEIPI,
    SUM(ITE.VLRIPI) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRIPI,
    SUM(ITE.BASESUBSTIT) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASESUBSTIT,
    SUM(ITE.VLRSUBST) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRSUBST,
    SUM(ITE.VLRDESC) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRDESC,
    SUM(ITE.BASEICMS) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEICMS,
    SUM(ITE.VLRICMS) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRICMS,
    NVL((SELECT SUM(NVL(BASERED,BASE)) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6),0) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEPIS,
    NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6),0) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRPIS,
    NVL((SELECT SUM(NVL(BASERED,BASE)) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7),0) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASECOFINS,
    NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7),0) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRCOFINS,
    /*SUM(ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) AS TOTALLIQ,*/
    SUM(CASE WHEN CAB.TIPMOV = 'D' THEN (ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) * -1 ELSE (ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) END) AS TOTALLIQ,
    (SUM(ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS) 
        - NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6),0)
        - NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7),0)
    ) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END)
        AS RECLIQ,
    (SUM(ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
        - NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6),0)
        - NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7),0)
        - SUM(NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG)
    ) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS MARGEMNON,
    (
    (SUM(ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
        - (SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6)
        - (SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7)
        - SUM(NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG)
    ) * 100 / NULLIF(SUM(ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC),0)
    ) PERCMARGEM,
    CAB.CODPARC,
    PAR.NOMEPARC,
    PARM.CODPARC AS CODPARCMATRIZ,
    PARM.NOMEPARC AS NOMEPARCMATRIZ,
    CAB.CODTIPOPER,
    TOP.DESCROPER,
    CAB.DTFATUR,
    CAB.DTMOV,
    CAB.DTENTSAI,
    CAB.DTNEG,
    F_DESCROPC('TGFCAB','STATUSNOTA',CAB.STATUSNOTA) AS STATUSNOTA,
    CAB.CODTIPVENDA,
    TPV.DESCRTIPVENDA,
    CAB.CODVEND,
    VEN.APELIDO,
    CAB.CODNAT,
    NAT.DESCRNAT,
    CAB.CODCENCUS,
    CUS.DESCRCENCUS,
    CAB.ORDEMCARGA,
    CASE WHEN CAB.TIPMOV = 'V' THEN 'BLUE' ELSE 'RED' END AS FGCOLOR,
    CAB.TIPMOV
    FROM TGFCAB CAB
    INNER JOIN TGFPAR PAR ON CAB.CODPARC = PAR.CODPARC
    INNER JOIN TSIEMP EMP ON CAB.CODEMP = EMP.CODEMP
    INNER JOIN TGFNAT NAT ON CAB.CODNAT = NAT.CODNAT
    INNER JOIN TSICUS CUS ON CAB.CODCENCUS = CUS.CODCENCUS
    INNER JOIN TGFTOP TOP ON CAB.CODTIPOPER = TOP.CODTIPOPER AND TOP.DHALTER = (SELECT MAX(DHALTER) FROM TGFTOP WHERE CODTIPOPER = CAB.CODTIPOPER)
    INNER JOIN TGFTPV TPV ON CAB.CODTIPVENDA = TPV.CODTIPVENDA AND TPV.DHALTER = CAB.DHTIPVENDA
    INNER JOIN TGFVEN VEN ON CAB.CODVEND = VEN.CODVEND
    LEFT JOIN TGFVEN VENS ON VENS.CODVEND = VEN.AD_SUPERVISOR
    LEFT JOIN TGFVEN VENG ON VENG.CODVEND = VEN.CODGER
    INNER JOIN TGFITE ITE ON CAB.NUNOTA = ITE.NUNOTA
    LEFT JOIN TGFCUS CUS ON CUS.CODPROD = ITE.CODPROD AND CUS.CODEMP = CAB.CODEMP AND CUS.DTATUAL = (SELECT MAX(C.DTATUAL) FROM TGFCUS C WHERE C.CODEMP = CAB.CODEMP AND C.CODPROD = ITE.CODPROD AND C.DTATUAL <= CAB.DTNEG)
    LEFT JOIN TGFPAR PARM ON PARM.CODPARC = PAR.CODPARCMATRIZ
    WHERE TOP.GOLSINAL = -1
    AND (CAB.DTNEG BETWEEN :P_PERIODO.INI AND  :P_PERIODO.FIN)
    
    AND TOP.TIPMOV IN ('V', 'D')
    AND TOP.ATIVO = 'S'
    
    
    AND CAB.CODNAT IN (:P_NATUREZA)
    AND CAB.CODCENCUS IN (:P_CR)
    AND CAB.CODVEND IN (:P_VENDEDOR)
    AND VEN.AD_ROTA IN (:P_ROTA)
    
    
    
    GROUP BY
    CAB.CODEMP,
    EMP.NOMEFANTASIA,
    CAB.NUNOTA,
    CAB.NUMNOTA,
    CAB.VLRNOTA,
    CAB.CODPARC,
    PAR.NOMEPARC,
    CAB.CODTIPOPER,
    TOP.DESCROPER,
    CAB.DTFATUR,
    CAB.DTMOV,
    CAB.DTENTSAI,
    CAB.DTNEG,
    CAB.CODTIPVENDA,
    TPV.DESCRTIPVENDA,
    CAB.STATUSNOTA,
    CAB.CODVEND,
    VEN.APELIDO,
    CAB.CODNAT,
    NAT.DESCRNAT,
    CAB.CODCENCUS,
    CUS.DESCRCENCUS,
    CAB.ORDEMCARGA,
    CAB.TIPMOV,
    PARM.CODPARC,
    PARM.NOMEPARC,
    VEN.CODVEND, 
    VEN.APELIDO,
    VENS.CODVEND, 
    VENS.APELIDO,
    VENG.CODVEND, 
    VENG.APELIDO
    )
    
</snk:query>



<snk:query var="mar_tipo">
    WITH BAS AS(
        SELECT
        PRO.CODPROD,
        PRO.DESCRPROD,
        PRO.AD_TPPROD,
        F_DESCROPC('TGFPRO','AD_TPPROD',PRO.AD_TPPROD) AS TIPOPROD,
        PRO.CODVOL,
        ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS QTDNEG,
        (FC_QTDALT_HL(ITE.CODPROD, ITE.QTDNEG, 'HL') * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS HL,
        (FC_QTDALT_HL(ITE.CODPROD, ITE.QTDNEG, 'HL') * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) * 100 AS LT,
        ITE.VLRUNIT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRUNIT,
        ITE.AD_CODTAB,
        (SELECT EXC.VLRVENDA
        FROM TGFTAB TAB
        INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG)) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PRECOTAB,
        
        (
        ((ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) / ITE.QTDNEG)
        - (SELECT EXC.VLRVENDA
        FROM TGFTAB TAB
        INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
        )
        / (SELECT EXC.VLRVENDA
        FROM TGFTAB TAB
        INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
        * 100
         * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PERCVLRLIQ,
        
        (
        ITE.VLRUNIT
        - (SELECT EXC.VLRVENDA
        FROM TGFTAB TAB
        INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
        )
        / (SELECT EXC.VLRVENDA
        FROM TGFTAB TAB
        INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
        * 100 
        * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PERCVLRUN,
        
        NVL(CUS.CUSSEMICM,0) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS CUSMEDSICM,
        ITE.VLRTOT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRTOT,
        NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS CUSMEDSICM_TOT,
        ITE.CODCFO,
        ITE.VLRIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRIPI,
        ITE.VLRSUBST * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRSUBST,
        ITE.PERCDESC,
        ITE.VLRDESC * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRDESC,
        ITE.BASEICMS * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEICMS,
        ITE.VLRICMS * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRICMS,
        (ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS TOTALLIQ,
        (ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) / ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS TOTALLIQUN,
        
        ((ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
            - NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
            - NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
        ) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS RECLIQ,
        
        (
        (ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
            - NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
            - NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
            - (NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG)
        ) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS MARGEMNON,
        
        (
        (ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS) 
            - NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
            - NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
            - (NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG)
        ) * 100 / 
        (ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) AS PERCMARGEM,
        
        
        ITE.CODLOCALORIG,
        LOC.DESCRLOCAL,
        ITE.CODTRIB AS TRIBUTACAO,
        ITE.ALIQICMS,
        ITE.IDALIQICMS AS CODALIQICM,
        ITE.BASESUBSTIT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASESUBSTIT,
        ITE.VLRSUBST * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRSUBST,
        ITE.CSTIPI,
        ITE.BASEIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEIPI,
        ITE.ALIQIPI,
        ITE.VLRIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRIPI,
        (SELECT SUM(NVL(BASERED,BASE)) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 6)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEPIS,
        (SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 6)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRPIS,
        (SELECT SUM(NVL(BASERED,BASE)) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 7)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASECOFINS,
        (SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 7)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRCOFINS,
        PRO.NCM,
        ITE.CODESPECST,
        CASE WHEN CAB.TIPMOV = 'V' THEN 'BLUE' ELSE 'RED' END AS FGCOLOR
        FROM TGFCAB CAB
        INNER JOIN TGFPAR PAR ON CAB.CODPARC = PAR.CODPARC
        INNER JOIN TSIEMP EMP ON CAB.CODEMP = EMP.CODEMP
        INNER JOIN TGFNAT NAT ON CAB.CODNAT = NAT.CODNAT
        INNER JOIN TSICUS CUS ON CAB.CODCENCUS = CUS.CODCENCUS
        INNER JOIN TGFITE ITE ON CAB.NUNOTA = ITE.NUNOTA
        INNER JOIN TGFLOC LOC ON ITE.CODLOCALORIG = LOC.CODLOCAL
        INNER JOIN TGFTOP TOP ON CAB.CODTIPOPER = TOP.CODTIPOPER AND TOP.DHALTER = (SELECT MAX(DHALTER) FROM TGFTOP WHERE CODTIPOPER = CAB.CODTIPOPER)
        INNER JOIN TGFTPV TPV ON CAB.CODTIPVENDA = TPV.CODTIPVENDA AND TPV.DHALTER = CAB.DHTIPVENDA
        INNER JOIN TGFVEN VEN ON CAB.CODVEND = VEN.CODVEND
        INNER JOIN TGFPRO PRO ON ITE.CODPROD = PRO.CODPROD
        LEFT JOIN TGFCUS CUS ON CUS.CODPROD = ITE.CODPROD AND CUS.CODEMP = CAB.CODEMP AND CUS.DTATUAL = (SELECT MAX(C.DTATUAL) FROM TGFCUS C WHERE C.CODEMP = CAB.CODEMP AND C.CODPROD = ITE.CODPROD AND DTATUAL <= CAB.DTNEG)
        WHERE TOP.GOLSINAL = -1
        AND (CAB.DTNEG BETWEEN :P_PERIODO.INI AND  :P_PERIODO.FIN)
        
        AND TOP.TIPMOV IN ('V', 'D')
        AND TOP.ATIVO = 'S'
        
        
        AND CAB.CODNAT IN (:P_NATUREZA)
        AND CAB.CODCENCUS IN (:P_CR)
        AND CAB.CODVEND IN (:P_VENDEDOR)
        AND VEN.AD_ROTA IN (:P_ROTA)
        
        
        
        
        )
        SELECT 
        AD_TPPROD,TIPOPROD,SUM(MARGEMNON) MARGEMNON
        FROM BAS
        GROUP BY AD_TPPROD,TIPOPROD
        

</snk:query>


<snk:query var="mar_ger">




WITH BAS AS(
SELECT
PRO.CODPROD,
PRO.DESCRPROD,
PRO.AD_TPPROD,
F_DESCROPC('TGFPRO','AD_TPPROD',PRO.AD_TPPROD) AS TIPOPROD,
PRO.CODVOL,
VEN.CODGER,
DECODE(VENG.APELIDO, '<SEM VENDEDOR>', 'NAO CADASTRADO', VENG.APELIDO) GERENTE,
ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS QTDNEG,
(FC_QTDALT_HL(ITE.CODPROD, ITE.QTDNEG, 'HL') * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS HL,
(FC_QTDALT_HL(ITE.CODPROD, ITE.QTDNEG, 'HL') * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) * 100 AS LT,
ITE.VLRUNIT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRUNIT,
ITE.AD_CODTAB,
(SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG)) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PRECOTAB,

(
((ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) / ITE.QTDNEG)
- (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
)
/ (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
* 100
 * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PERCVLRLIQ,

(
ITE.VLRUNIT
- (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
)
/ (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
* 100 
* (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PERCVLRUN,

NVL(CUS.CUSSEMICM,0) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS CUSMEDSICM,
ITE.VLRTOT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRTOT,
NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS CUSMEDSICM_TOT,
ITE.CODCFO,
ITE.VLRIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRIPI,
ITE.VLRSUBST * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRSUBST,
ITE.PERCDESC,
ITE.VLRDESC * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRDESC,
ITE.BASEICMS * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEICMS,
ITE.VLRICMS * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRICMS,
(ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS TOTALLIQ,
(ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) / ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS TOTALLIQUN,

((ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS RECLIQ,

(
(ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- (NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG)
) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS MARGEMNON,

(
(ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS) 
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- (NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG)
) * 100 / 
(ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) AS PERCMARGEM,


ITE.CODLOCALORIG,
LOC.DESCRLOCAL,
ITE.CODTRIB AS TRIBUTACAO,
ITE.ALIQICMS,
ITE.IDALIQICMS AS CODALIQICM,
ITE.BASESUBSTIT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASESUBSTIT,
ITE.VLRSUBST * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRSUBST,
ITE.CSTIPI,
ITE.BASEIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEIPI,
ITE.ALIQIPI,
ITE.VLRIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRIPI,
(SELECT SUM(NVL(BASERED,BASE)) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 6)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEPIS,
(SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 6)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRPIS,
(SELECT SUM(NVL(BASERED,BASE)) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 7)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASECOFINS,
(SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 7)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRCOFINS,
PRO.NCM,
ITE.CODESPECST,
CASE WHEN CAB.TIPMOV = 'V' THEN 'BLUE' ELSE 'RED' END AS FGCOLOR
FROM TGFCAB CAB
INNER JOIN TGFPAR PAR ON CAB.CODPARC = PAR.CODPARC
INNER JOIN TSIEMP EMP ON CAB.CODEMP = EMP.CODEMP
INNER JOIN TGFNAT NAT ON CAB.CODNAT = NAT.CODNAT
INNER JOIN TSICUS CUS ON CAB.CODCENCUS = CUS.CODCENCUS
INNER JOIN TGFITE ITE ON CAB.NUNOTA = ITE.NUNOTA
INNER JOIN TGFLOC LOC ON ITE.CODLOCALORIG = LOC.CODLOCAL
INNER JOIN TGFTOP TOP ON CAB.CODTIPOPER = TOP.CODTIPOPER AND TOP.DHALTER = (SELECT MAX(DHALTER) FROM TGFTOP WHERE CODTIPOPER = CAB.CODTIPOPER)
INNER JOIN TGFTPV TPV ON CAB.CODTIPVENDA = TPV.CODTIPVENDA AND TPV.DHALTER = CAB.DHTIPVENDA
INNER JOIN TGFVEN VEN ON CAB.CODVEND = VEN.CODVEND
LEFT JOIN TGFVEN VENG ON VENG.CODVEND = VEN.CODGER
INNER JOIN TGFPRO PRO ON ITE.CODPROD = PRO.CODPROD
LEFT JOIN TGFCUS CUS ON CUS.CODPROD = ITE.CODPROD AND CUS.CODEMP = CAB.CODEMP AND CUS.DTATUAL = (SELECT MAX(C.DTATUAL) FROM TGFCUS C WHERE C.CODEMP = CAB.CODEMP AND C.CODPROD = ITE.CODPROD AND DTATUAL <= CAB.DTNEG)
WHERE TOP.GOLSINAL = -1
AND (CAB.DTNEG BETWEEN :P_PERIODO.INI AND  :P_PERIODO.FIN)

AND TOP.TIPMOV IN ('V', 'D')
AND TOP.ATIVO = 'S'


AND CAB.CODNAT IN (:P_NATUREZA)
AND CAB.CODCENCUS IN (:P_CR)
AND CAB.CODVEND IN (:P_VENDEDOR)
AND VEN.AD_ROTA IN (:P_ROTA)




)
SELECT 
AD_TPPROD,CODGER,GERENTE,SUM(MARGEMNON) MARGEMNON
FROM BAS
WHERE AD_TPPROD = :A_TPPROD OR ( AD_TPPROD = 4 AND :A_TPPROD IS NULL)
GROUP BY AD_TPPROD,CODGER,GERENTE
ORDER BY 4 DESC



</snk:query>


<snk:query var="mar_cli">

SELECT * FROM (
WITH BAS AS(
SELECT
PRO.CODPROD,
PRO.DESCRPROD,
PRO.AD_TPPROD,
F_DESCROPC('TGFPRO','AD_TPPROD',PRO.AD_TPPROD) AS TIPOPROD,
PRO.CODVOL,
VEN.CODGER,
DECODE(VENG.APELIDO, '<SEM VENDEDOR>', 'NAO CADASTRADO', VENG.APELIDO) GERENTE,
CAB.CODPARC,
SUBSTR(PAR.NOMEPARC,1,13) NOMEPARC,
ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS QTDNEG,
(FC_QTDALT_HL(ITE.CODPROD, ITE.QTDNEG, 'HL') * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS HL,
(FC_QTDALT_HL(ITE.CODPROD, ITE.QTDNEG, 'HL') * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) * 100 AS LT,
ITE.VLRUNIT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRUNIT,
ITE.AD_CODTAB,
(SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG)) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PRECOTAB,

(
((ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) / ITE.QTDNEG)
- (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
)
/ (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
* 100
 * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PERCVLRLIQ,

(
ITE.VLRUNIT
- (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
)
/ (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
* 100 
* (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PERCVLRUN,

NVL(CUS.CUSSEMICM,0) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS CUSMEDSICM,
ITE.VLRTOT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRTOT,
NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS CUSMEDSICM_TOT,
ITE.CODCFO,
ITE.VLRIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRIPI,
ITE.VLRSUBST * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRSUBST,
ITE.PERCDESC,
ITE.VLRDESC * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRDESC,
ITE.BASEICMS * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEICMS,
ITE.VLRICMS * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRICMS,
(ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS TOTALLIQ,
(ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) / ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS TOTALLIQUN,

((ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS RECLIQ,

(
(ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- (NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG)
) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS MARGEMNON,

(
(ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS) 
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- (NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG)
) * 100 / 
(ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) AS PERCMARGEM,


ITE.CODLOCALORIG,
LOC.DESCRLOCAL,
ITE.CODTRIB AS TRIBUTACAO,
ITE.ALIQICMS,
ITE.IDALIQICMS AS CODALIQICM,
ITE.BASESUBSTIT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASESUBSTIT,
ITE.VLRSUBST * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRSUBST,
ITE.CSTIPI,
ITE.BASEIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEIPI,
ITE.ALIQIPI,
ITE.VLRIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRIPI,
(SELECT SUM(NVL(BASERED,BASE)) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 6)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEPIS,
(SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 6)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRPIS,
(SELECT SUM(NVL(BASERED,BASE)) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 7)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASECOFINS,
(SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 7)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRCOFINS,
PRO.NCM,
ITE.CODESPECST,
CASE WHEN CAB.TIPMOV = 'V' THEN 'BLUE' ELSE 'RED' END AS FGCOLOR
FROM TGFCAB CAB
INNER JOIN TGFPAR PAR ON CAB.CODPARC = PAR.CODPARC
INNER JOIN TSIEMP EMP ON CAB.CODEMP = EMP.CODEMP
INNER JOIN TGFNAT NAT ON CAB.CODNAT = NAT.CODNAT
INNER JOIN TSICUS CUS ON CAB.CODCENCUS = CUS.CODCENCUS
INNER JOIN TGFITE ITE ON CAB.NUNOTA = ITE.NUNOTA
INNER JOIN TGFLOC LOC ON ITE.CODLOCALORIG = LOC.CODLOCAL
INNER JOIN TGFTOP TOP ON CAB.CODTIPOPER = TOP.CODTIPOPER AND TOP.DHALTER = (SELECT MAX(DHALTER) FROM TGFTOP WHERE CODTIPOPER = CAB.CODTIPOPER)
INNER JOIN TGFTPV TPV ON CAB.CODTIPVENDA = TPV.CODTIPVENDA AND TPV.DHALTER = CAB.DHTIPVENDA
INNER JOIN TGFVEN VEN ON CAB.CODVEND = VEN.CODVEND
LEFT JOIN TGFVEN VENG ON VENG.CODVEND = VEN.CODGER
INNER JOIN TGFPRO PRO ON ITE.CODPROD = PRO.CODPROD
LEFT JOIN TGFCUS CUS ON CUS.CODPROD = ITE.CODPROD AND CUS.CODEMP = CAB.CODEMP AND CUS.DTATUAL = (SELECT MAX(C.DTATUAL) FROM TGFCUS C WHERE C.CODEMP = CAB.CODEMP AND C.CODPROD = ITE.CODPROD AND DTATUAL <= CAB.DTNEG)
WHERE TOP.GOLSINAL = -1
AND (CAB.DTNEG BETWEEN :P_PERIODO.INI AND  :P_PERIODO.FIN)

AND TOP.TIPMOV IN ('V', 'D')
AND TOP.ATIVO = 'S'


AND CAB.CODNAT IN (:P_NATUREZA)
AND CAB.CODCENCUS IN (:P_CR)
AND CAB.CODVEND IN (:P_VENDEDOR)
AND VEN.AD_ROTA IN (:P_ROTA)




)
SELECT 
AD_TPPROD,CODPARC,NOMEPARC,SUM(MARGEMNON) MARGEMNON
FROM BAS
WHERE AD_TPPROD = :A_TPPROD OR ( AD_TPPROD = 4 AND :A_TPPROD IS NULL)
GROUP BY AD_TPPROD,CODPARC,NOMEPARC
ORDER BY 4 DESC
)WHERE ROWNUM <=10

</snk:query>


<snk:query var="mar_prod">

WITH BAS AS(
SELECT

PRO.AD_TPPROD,
F_DESCROPC('TGFPRO','AD_TPPROD',PRO.AD_TPPROD) AS TIPOPROD,
ITE.CODPROD,
PRO.DESCRPROD,
PRO.CODVOL,
VEN.CODGER,
DECODE(VENG.APELIDO, '<SEM VENDEDOR>', 'NAO CADASTRADO', VENG.APELIDO) GERENTE,
CAB.CODPARC,
SUBSTR(PAR.NOMEPARC,1,13) NOMEPARC,
ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS QTDNEG,
(FC_QTDALT_HL(ITE.CODPROD, ITE.QTDNEG, 'HL') * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS HL,
(FC_QTDALT_HL(ITE.CODPROD, ITE.QTDNEG, 'HL') * CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) * 100 AS LT,
ITE.VLRUNIT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRUNIT,
ITE.AD_CODTAB,
(SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG)) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PRECOTAB,

(
((ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) / ITE.QTDNEG)
- (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
)
/ (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
* 100
 * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PERCVLRLIQ,

(
ITE.VLRUNIT
- (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
)
/ (SELECT EXC.VLRVENDA
FROM TGFTAB TAB
INNER JOIN TGFEXC EXC ON TAB.NUTAB = EXC.NUTAB AND EXC.CODPROD = ITE.CODPROD AND TAB.CODTAB = ITE.AD_CODTAB AND TAB.DTVIGOR < CAB.DTNEG AND TAB.DTVIGOR = (SELECT MAX(T.DTVIGOR) FROM TGFTAB T, TGFEXC E WHERE T.NUTAB = E.NUTAB AND T.CODTAB=TAB.CODTAB AND E.CODPROD = EXC.CODPROD AND T.DTVIGOR <= CAB.DTNEG))
* 100 
* (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS PERCVLRUN,

NVL(CUS.CUSSEMICM,0) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS CUSMEDSICM,
ITE.VLRTOT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRTOT,
NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS CUSMEDSICM_TOT,
ITE.CODCFO,
ITE.VLRIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRIPI,
ITE.VLRSUBST * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRSUBST,
ITE.PERCDESC,
ITE.VLRDESC * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRDESC,
ITE.BASEICMS * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEICMS,
ITE.VLRICMS * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRICMS,
(ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS TOTALLIQ,
(ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) / ITE.QTDNEG * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS TOTALLIQUN,

((ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS RECLIQ,

(
(ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- (NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG)
) * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS MARGEMNON,

(
(ITE.VLRTOT - ITE.VLRDESC - ITE.VLRICMS) 
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 6 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- NVL((SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND CODIMP = 7 AND SEQUENCIA = ITE.SEQUENCIA),0)
	- (NVL(CUS.CUSSEMICM,0) * ITE.QTDNEG)
) * 100 / 
(ITE.VLRTOT + ITE.VLRIPI + ITE.VLRSUBST - ITE.VLRDESC) AS PERCMARGEM,


ITE.CODLOCALORIG,
LOC.DESCRLOCAL,
ITE.CODTRIB AS TRIBUTACAO,
ITE.ALIQICMS,
ITE.IDALIQICMS AS CODALIQICM,
ITE.BASESUBSTIT * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASESUBSTIT,
ITE.VLRSUBST * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRSUBST,
ITE.CSTIPI,
ITE.BASEIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEIPI,
ITE.ALIQIPI,
ITE.VLRIPI * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRIPI,
(SELECT SUM(NVL(BASERED,BASE)) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 6)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASEPIS,
(SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 6)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRPIS,
(SELECT SUM(NVL(BASERED,BASE)) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 7)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS BASECOFINS,
(SELECT SUM(VALOR) FROM TGFDIN WHERE NUNOTA = CAB.NUNOTA AND SEQUENCIA = ITE.SEQUENCIA AND CODIMP = 7)  * (CASE WHEN CAB.TIPMOV = 'D' THEN -1 ELSE 1 END) AS VLRCOFINS,
PRO.NCM,
ITE.CODESPECST,
CASE WHEN CAB.TIPMOV = 'V' THEN 'BLUE' ELSE 'RED' END AS FGCOLOR
FROM TGFCAB CAB
INNER JOIN TGFPAR PAR ON CAB.CODPARC = PAR.CODPARC
INNER JOIN TSIEMP EMP ON CAB.CODEMP = EMP.CODEMP
INNER JOIN TGFNAT NAT ON CAB.CODNAT = NAT.CODNAT
INNER JOIN TSICUS CUS ON CAB.CODCENCUS = CUS.CODCENCUS
INNER JOIN TGFITE ITE ON CAB.NUNOTA = ITE.NUNOTA
INNER JOIN TGFLOC LOC ON ITE.CODLOCALORIG = LOC.CODLOCAL
INNER JOIN TGFTOP TOP ON CAB.CODTIPOPER = TOP.CODTIPOPER AND TOP.DHALTER = (SELECT MAX(DHALTER) FROM TGFTOP WHERE CODTIPOPER = CAB.CODTIPOPER)
INNER JOIN TGFTPV TPV ON CAB.CODTIPVENDA = TPV.CODTIPVENDA AND TPV.DHALTER = CAB.DHTIPVENDA
INNER JOIN TGFVEN VEN ON CAB.CODVEND = VEN.CODVEND
LEFT JOIN TGFVEN VENG ON VENG.CODVEND = VEN.CODGER
INNER JOIN TGFPRO PRO ON ITE.CODPROD = PRO.CODPROD
LEFT JOIN TGFCUS CUS ON CUS.CODPROD = ITE.CODPROD AND CUS.CODEMP = CAB.CODEMP AND CUS.DTATUAL = (SELECT MAX(C.DTATUAL) FROM TGFCUS C WHERE C.CODEMP = CAB.CODEMP AND C.CODPROD = ITE.CODPROD AND DTATUAL <= CAB.DTNEG)
WHERE TOP.GOLSINAL = -1
AND (CAB.DTNEG BETWEEN :P_PERIODO.INI AND  :P_PERIODO.FIN)

AND TOP.TIPMOV IN ('V', 'D')
AND TOP.ATIVO = 'S'


AND CAB.CODNAT IN (:P_NATUREZA)
AND CAB.CODCENCUS IN (:P_CR)
AND CAB.CODVEND IN (:P_VENDEDOR)
AND VEN.AD_ROTA IN (:P_ROTA)




)
SELECT 
AD_TPPROD,TIPOPROD,CODPROD,DESCRPROD,SUM(MARGEMNON) MARGEMNON
FROM BAS
WHERE AD_TPPROD = :A_TPPROD OR ( AD_TPPROD = 4 AND :A_TPPROD IS NULL)
GROUP BY AD_TPPROD,TIPOPROD,CODPROD,DESCRPROD
ORDER BY 5 DESC

</snk:query>


<body>
    <div class="container">
        <div class="section">
            <div class="part" id="left-top">
                <div class="part-title">Margem por Tipo Produto</div>
                <div class="chart-container">
                    <canvas id="doughnutChart"></canvas>
                    <c:forEach items="${mar_tot.rows}" var="row">
                        <div class="chart-overlay"><fmt:formatNumber value="${row.MARGEMNON}" type="currency" currencySymbol="" groupingUsed="true" minFractionDigits="0" maxFractionDigits="0"/></div>
                    </c:forEach>
                </div>
            </div>
            <div class="part" id="left-bottom">
                <div class="part-title">Margem Por Gerente</div>
                <div class="chart-container">
                    <canvas id="barChart"></canvas>
                </div>
            </div>
        </div>
        <div class="section">
            <div class="part" id="right-top">
                <div class="part-title">TOP 10 - Margem Por Cliente</div>
                <div class="chart-container">
                    <canvas id="barChart1"></canvas>
                </div>
            </div>
            <div class="part" id="right-bottom">
                <div class="part-title">Margem por Produto</div>
                <div class="table-container">mar_prod
                    <table>
                        <thead>
                            <tr>
                                <th>Cód. Tp.Prod.</th>
                                <th>Tp. Prod.</th>
                                <th>Cód. Prod.</th>
                                <th>Produto</th>
                                <th>Margem Nom.</th>
                            </tr>
                        </thead>
                        <tbody>
                            <c:set var="total" value="0" />
                            <c:forEach var="item" items="${mar_prod.rows}">
                                <tr>
                                    <td>${item.AD_TPPROD}</td>
                                    <td>${item.TIPOPROD}</td>
                                    <td onclick="abrir_pro('${item.AD_TPPROD}','${item.CODPROD}')">${item.CODPROD}</td>
                                    <td>${item.DESCRPROD}</td>
                                    <td><fmt:formatNumber value="${item.MARGEMNON}" type="number" currencySymbol="" groupingUsed="true" minFractionDigits="2" maxFractionDigits="2"/></td>
                                    <c:set var="total" value="${total + item.MARGEMNON}" />
                                </tr>
                            </c:forEach>
                            <tr>
                                <td><b>Total</b></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td><b><fmt:formatNumber value="${total}" type="number" currencySymbol="" groupingUsed="true" minFractionDigits="2" maxFractionDigits="2"/></b></td>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Adicionando a biblioteca Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Adicionando a biblioteca jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Adicionando a biblioteca DataTables -->
    <script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
    <script>


        // Função para atualizar a query
        function ref_tpprod(tipoprod) {
                const params = {'A_TPPROD': parseInt(tipoprod)};
                refreshDetails('html5_a73fhjt', params); 
            }



        // Função para abrir o novo nível

        function abrir_ger(grupo,grupo1) {
            var params = { 
                'A_TPPROD' : parseInt(grupo),
                'A_CODGER': parseInt(grupo1)
             };
            var level = 'lvl_1f45rd';
            
            openLevel(level, params);
        }


        function abrir_cli(grupo,grupo1) {
            var params = { 
                'A_TPPROD' : parseInt(grupo),
                'A_CODPARC': parseInt(grupo1)
             };
            var level = 'lvl_1f45rd';
            
            openLevel(level, params);
        }


        function abrir_pro(grupo,grupo1) {
            var params = { 
                'A_TPPROD' : parseInt(grupo),
                'A_CODPROD': parseInt(grupo1)
             };
            var level = 'lvl_1f45rd';
            
            openLevel(level, params);
        }


        // Dados fictícios para o gráfico de rosca
        const ctxDoughnut = document.getElementById('doughnutChart').getContext('2d');

        var marTpProdLabel = [];
        var marTpProdData = [];
        <c:forEach items="${mar_tipo.rows}" var="row">
            marTpProdLabel.push('${row.AD_TPPROD} - ${row.TIPOPROD}');
            marTpProdData.push(parseFloat(${row.MARGEMNON}));
        </c:forEach>

        const doughnutChart = new Chart(ctxDoughnut, {
            type: 'doughnut',
            data: {
                labels: marTpProdLabel,
                datasets: [{
                    label: 'Margem por Tipo',
                    data: marTpProdData,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'left',
                        align: 'center', // Alinhamento vertical da legenda
                    }
                },
                onClick: function(event, elements) {
                    if (elements.length > 0) {
                        var index = elements[0].index;
                        var label = marTpProdLabel[index].split('-')[0];
                        
                        ref_tpprod(label);
                        //alert(label);
                    }
                }
            }
        });

        // Dados fictícios para o gráfico de barras verticais
        const ctxBar = document.getElementById('barChart').getContext('2d');

        var marGerLabel = [];
        var marGerData = [];
        <c:forEach items="${mar_ger.rows}" var="row">
            marGerLabel.push('${row.AD_TPPROD} - ${row.CODGER} - ${row.GERENTE}');
            marGerData.push(parseFloat(${row.MARGEMNON}));
        </c:forEach>        

        const barChart = new Chart(ctxBar, {
            type: 'bar',
            data: {
                labels: marGerLabel,
                datasets: [{
                    label: 'Margem por Gerente',
                    data: marGerData,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false // Remove a legenda
                    }
                },
                scales: {
                    x: {
                        beginAtZero: true
                    },
                    y: {
                        beginAtZero: true
                    }
                },
                onClick: function(evt, activeElements) {
                    if (activeElements.length > 0) {
                        const index = activeElements[0].index;
                        const grupo = marGerLabel[index].split('-')[0];
                        const grupo1 = marGerLabel[index].split('-')[1];
                        abrir_ger(grupo,grupo1);
                    }
                }
            }
        });

        // Dados fictícios para o gráfico de colunas verticais
        const ctxBarRight = document.getElementById('barChart1').getContext('2d');

        var marCliLabel = [];
        var marCliData = [];
        <c:forEach items="${mar_cli.rows}" var="row">
            marCliLabel.push('${row.AD_TPPROD} - ${row.CODPARC} - ${row.NOMEPARC}');
            marCliData.push(parseFloat(${row.MARGEMNON}));
        </c:forEach>   

        const barChartRight = new Chart(ctxBarRight, {
            type: 'bar',
            data: {
                labels: marCliLabel,
                datasets: [{
                    label: 'Margem por Cliente',
                    data: marCliData,
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false // Remove a legenda
                    }
                },
                scales: {
                    x: {
                        beginAtZero: true
                    },
                    y: {
                        beginAtZero: true
                    }
                },
                onClick: function(evt, activeElements) {
                    if (activeElements.length > 0) {
                        const index = activeElements[0].index;
                        const grupo = marCliLabel[index].split('-')[0];
                        const grupo1 = marCliLabel[index].split('-')[1];
                        abrir_cli(grupo,grupo1);
                    }
                }
            }
        });



        
    </script>
</body>
</html>
