REPORT YDFM_0001.

WRITE 'Teste novo!!'.
WRITE / 'Teste novo!!'.

* Variaveis (INT, CHAR, STRING, DATE, TIME, DECIMAL)
" TIPO 2 DE COMENTARIO.

* INT - Inteiros (1,2,3,4,5,6....Estruturas e Tabelas)

DATA: numero1 TYPE i,
      numero2 TYPE i,
      resultado TYPE i.

numero1 = 10.
numero2 = 20.
resultado = numero1 + numero2.
WRITE: / 'Numero 1: ', numero1.
WRITE: / 'Numero 2: ', numero2.
WRITE: / 'Resultado: ', resultado.

* CHAR - Texto de 1 posição

DATA: sexo TYPE c.

sexo = 'M'.
WRITE: / 'Sexo: ', numero1.


* STRING - Texto 256 caracteres

DATA: mensagem TYPE string.
mensagem = 'O sap é muito top'.
WRITE: / 'Mensagem: ', mensagem.


* DATE - Data do calendário.

DATA: aniversario TYPE dats,
      data_atual TYPE dats.

aniversario = '19840102'.
WRITE: / 'Data Aniversário: ', aniversario.

data_atual = sy-datum.
WRITE: / 'Data Atual: ', data_atual.

* TIME - Horário do Relógio
DATA: hora_video TYPE uzeit,
      hora_atual TYPE uzeit.

hora_video = '222600'.
WRITE: / 'Hora Video: ', hora_video.

hora_atual = sy-uzeit.
WRITE: / 'Hora Atual: ', hora_atual.


* DECIMAL - Números com casas decimais.
DATA: valor_iphone TYPE p DECIMALS 2.

valor_iphone = '1122.20'.
WRITE: / 'Valor Iphone: ', valor_iphone.

* CONTANTES - Variáveis que não modificam o valor
CONSTANTS: type_erro TYPE c VALUE 'E'.

* RANGES - Intervalo de valores
RANGES: intervalo_data FOR sy-datum.

* SING   -> E - Exclude | I - Include
* OPTION -> FQ - Igual | BT - Entre | NE - Não Igual
* LOW    -> Valor De
* HIGH   -> Valor Até
intervalo_data-sign   = 'I'.
intervalo_data-option = 'BT'.
intervalo_data-low    = '20220101'.
intervalo_data-high   = '20230101'.


* ESTRUTURAS - Variáveis com Colunas.
* Dados de um Cliente.
* Nome Completo, Data Nascimento, Email.
TYPES: BEGIN OF ty_cliente,
        nome_completo   TYPE string,
        data_nascimento TYPE dats,
        email           TYPE string,
       END OF ty_cliente.
DATA: cliente TYPE ty_cliente,
      cliente2 TYPE ty_cliente. " Definição da variável cliente2
cliente-NOME_COMPLETO   = 'Diogo Ferreira Moura'.
cliente-EMAIL           = 'diogomou@gmail.com'.
cliente-DATA_NASCIMENTO = '19840102'.


WRITE: / 'O Cliente ', cliente-NOME_COMPLETO,
         'nasceu em ',cliente-DATA_NASCIMENTO,
         ' e tem o email ', cliente-EMAIL.

* TABLE - Tabelas (Possui Linhas com estruturas definidas)
DATA: clientes TYPE TABLE OF ty_cliente.
APPEND cliente TO clientes.

APPEND VALUE ty_cliente(
NOME_COMPLETO   = 'JOAO GOULART'
DATA_NASCIMENTO = '18020101'
EMAIL           = 'joao@gmail.com'
) TO clientes.

* CONDIÇÕES = IF
DATA: numero_if TYPE i.
numero_if = 2.

IF numero_if = 2.
  WRITE: / 'Número IF é 2'.
ELSE.
  WRITE: / 'Número IF não é 2'.
ENDIF.


* XSDBOOL

DATA(validacao_if) = xsdbool( numero_if = 2 ).
WRITE: / validacao_if.

IF numero_if >= 1 AND numero_if <= 10.
  WRITE: / 'Dentro do Range'.
ENDIF.


DATA(validacao_if2) = xsdbool( numero_if = 2 OR numero_if = 3 ).
WRITE: / validacao_if2.

IF xsdbool( numero_if = 2 OR numero_if = 3 ) = 'X'.
  WRITE: / 'Entrou na Regra 2 ou 3.'.
ENDIF.

CHECK numero_if = 2.

WRITE: / 'Continua o programa'.

* Codições CASE
DATA: case_number TYPE i VALUE 2.
CASE numero_if.
  WHEN 2.
    WRITE: / 'CASE - é 2'.
  WHEN 3.
    WRITE: / 'CASE - é 3'.
  WHEN OTHERS.
ENDCASE.

* LOOP - Percorrer linhas de uma tabela
TYPES: ty_interger TYPE TABLE OF i WITH DEFAULT KEY.
DATA(tabela) = VALUE ty_interger( ( 1 ) ( 2 ) ( 3 ) ( 4 ) ).



LOOP AT tabela INTO DATA(linha).
  WRITE: / 'linha - ', linha.
ENDLOOP.


* DO - Percorre N vezes.
DO 5 TIMES.
WRITE: / 'DO - ', 1.
ENDDO.

* READ TABLE - Ler uma Linha de uma tabela.
READ TABLE tabela INTO DATA(read_line) INDEX 1.
WRITE: / 'READ TABLE - ', read_line.

READ TABLE clientes INTO DATA(joao) WITH KEY nome_completo = 'JOAO GOULART'.
WRITE: / 'READ TABLE - ', joao-nome_completo,joao-data_nascimento.

* Limpar Valores das Variáveis
CLEAR: cliente.
cliente-nome_completo = 'JOAO GOULART'.
WRITE: / cliente-nome_completo,' - ', cliente2-nome_completo.
MOVE-CORRESPONDING cliente TO cliente2.
WRITE: / cliente-nome_completo,' - ', cliente2-nome_completo.


* Variáveis SY - Variáveis do Servidor
WRITE:
  / 'Data Servidor: ', sy-datum,
  / 'Hora Servidor: ', sy-uzeit,
  / 'Nome Servidor: ', sy-sysid,
  / 'Usuário Logado: ', sy-uname,
  / 'Nome Programa: ', sy-cprog,
  / 'Titulo Programa: ', sy-title.