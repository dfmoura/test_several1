CREATE OR REPLACE PROCEDURE prc_teste_idiproc
(
	p_idiproc IN NUMBER,
	p_idccq   IN NUMBER DEFAULT 3,
	-- outputs
	p_cur_iproc OUT SYS_REFCURSOR,
	p_cur_ipa   OUT SYS_REFCURSOR,
	p_cur_iccq  OUT SYS_REFCURSOR
) AS
	v_idiccq NUMBER;
BEGIN
	-- 1) Obter o último IDICCQ para o IDIPROC informado e IDCCQ desejado
	SELECT MAX(IDICCQ)
	INTO v_idiccq
	FROM TPRICCQ
	WHERE IDIPROC = p_idiproc
	  AND IDCCQ = p_idccq;

	-- 2) Cursor com o(s) registro(s) de TPRICCQ encontrado(s)
	OPEN p_cur_iccq FOR
		SELECT IDICCQ, IDIPROC, IDCCQ, RESULTADO
		FROM TPRICCQ
		WHERE IDICCQ = v_idiccq;

	-- 3) Detalhes principais do processo (TPRIPROC)
	OPEN p_cur_iproc FOR
		SELECT 
			TPRIPROC.AD_DTFABRICACAO,
			TPRIPROC.AD_LOTEPI,
			TPRIPROC.AD_OBSERVACAO,
			TPRIPROC.AD_QUALIDADE,
			TPRIPROC.CODPARC,
			TPRIPROC.CODPLP,
			TPRIPROC.CODUSUFINAL,
			TPRIPROC.CODUSUINC,
			TPRIPROC.DHINC,
			TPRIPROC.DHINST,
			TPRIPROC.DHTERMINO,
			TPRIPROC.DTINICIOMAX,
			TPRIPROC.DTPREVENT,
			TPRIPROC.IDICOP,
			TPRIPROC.IDIPROC,
			TPRIPROC.IDIPROCPAI,
			TPRIPROC.IDPROC,
			TPRIPROC.IDWFLOW,
			TPRIPROC.NROLOTE,
			TPRIPROC.NUMPS,
			TPRIPROC.NUNOTA,
			TPRIPROC.PRIORIDADE,
			TPRIPROC.SEQNOTA,
			TPRIPROC.STATUSPROC,
			TPRIPROC.TEMPOATRAVESS,
			-- Simplificação: não replicamos subqueries/CASE complexos do log
			NULL AS AD_ESTOQUE,
			NULL AS AD_IDIPROCPI,
			NULL AS AD_NURAM,
			TPRIPROC.CODPARCTERC
		FROM TPRIPROC
		WHERE TPRIPROC.IDIPROC = p_idiproc;

	-- 4) Itens/PA do processo (TPRIPA) e SALDO simplificado
	OPEN p_cur_ipa FOR
		SELECT 
			TPRIPA.CODPRODPA,
			TPRIPA.CONCLUIDO,
			TPRIPA.CONTROLEPA,
			TPRIPA.DTFAB,
			TPRIPA.DTVAL,
			TPRIPA.IDIPROC,
			TPRIPA.NROLOTE,
			TPRIPA.QTDPRODUZIR,
			TPRIPA.QTDPRODUZIR_ORIGINAL,
			-- as no log: SELECT REFERENCIA FROM TGFPRO WHERE CODPROD = TPRIPA.CODPRODPA
			(SELECT REFERENCIA FROM TGFPRO PRO WHERE PRO.CODPROD = TPRIPA.CODPRODPA) AS REFERENCIA,
			-- SALDO simplificado (não replicamos todas as junções do log): qtd a produzir como proxy
			TPRIPA.QTDPRODUZIR AS SALDOOP
		FROM TPRIPA
		WHERE TPRIPA.IDIPROC = p_idiproc;
END prc_teste_idiproc;
/

-- Exemplo de uso:
-- VAR cur_iproc REFCURSOR;
-- VAR cur_ipa   REFCURSOR;
-- VAR cur_iccq  REFCURSOR;
-- EXEC prc_teste_idiproc(p_idiproc => 235, p_cur_iproc => :cur_iproc, p_cur_ipa => :cur_ipa, p_cur_iccq => :cur_iccq);
-- PRINT cur_iproc;
-- PRINT cur_ipa;
-- PRINT cur_iccq;
